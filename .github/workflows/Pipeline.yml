name: pipeline

on:
  push:
    branches:
      - main
      - develop
      - release
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - develop
      - release

jobs:
  Teste_Unitario:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Run All Tests
        run: |
          for proj in CasosDeUsos.Tests Entidades.Tests InterfaceAdapters.Tests; do
            echo "Restoring $proj..."
            dotnet restore $proj
            echo "Running tests for $proj..."
            dotnet test $proj --no-restore --verbosity normal
          done

  Publica_Image:
    runs-on: ubuntu-latest
    needs: Teste_Unitario
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore, Build e Publish
        run: |
          dotnet restore fastfood.sln
          dotnet build --configuration Release fastfood.sln
          dotnet publish --configuration Release -o ./publish fastfood.sln

      - name: Docker Login - GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker Image
        run: |
          docker build -t ghcr.io/leonardocomar/fastfoodapi:latest -f ./API/Dockerfile .

      - name: Push Docker Image
        run: |
          docker push ghcr.io/leonardocomar/fastfoodapi:latest

      - name: Make GHCR Image Public
        run: |
          curl -X PATCH \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{"visibility": "public"}' \
            https://api.github.com/user/packages/container/leonardocomar/fast-food-fase-3/versions/latest

  Deploy-EKS:
    runs-on: ubuntu-latest
    needs: Publica_Image
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout cÃ³digo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Set lowercase repository name
        run: |
          echo "REPO_NAME=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "REPO_FULL=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Deployment no EKS
        run: aws eks update-kubeconfig --name fastfood-cluster --region us-east-1

      - name: Setup kubeconfig EKS
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Verificar rollout do deploy
        run: kubectl rollout status deployment/fastfoodapi-deployment --namespace=default

      - name: Deployment no EKS
        run: |
          kubectl rollout restart deployment/fastfoodapi-deployment --namespace=default

      - name: Verificar rollout do deploy
        run: kubectl rollout status deployment/fastfoodapi-deployment --namespace=default